var _colNames = ['主键',    '姓名', '性别', '籍贯', '单位', '职务', '政治面貌',    '手机号', '身份证号', '毕业院校', '警号', '出生年月', '班次',    '状态', '备注', '创建日期', '更新时间', '操作'];var _colModel = function () {    return [        {            name: 'id',            editable: false,            hidden: true,            width: 100,            editoptions: {                size: "20",                maxlength: "50"            },            formoptions: {                elmprefix: "",                elmsuffix: "<span style='color:red;'>*</span>"            },            editrules: {                required: true            }        }        , {            name: 'name',            editable: true,            width: 75,            editoptions: {                size: "20",                maxlength: "15"            },            formoptions: {                elmprefix: "",                elmsuffix: "<span style='color:red;'>*</span>"            },            editrules: {                required: true            }        }        , {            name: 'sex',            editable: true,            hidden: true,            width: 35,            edittype: "select",            renderer: function (value) {                return rsd(value, "01");            },            editoptions: {                value: odparse("01")            }        }        , {            name: 'areaCode',            editable: true,            width: 75,            editoptions: {                size: "20",                maxlength: "15"            },            renderer: function (value, cur) {                var v = $.jgrid.getAccessor(cur, 'areaCodeName');                if (v == '' || v == null || v == undefined) {                    v = '';                }                return v;            },            formoptions: {                elmprefix: "",                elmsuffix: "<span style='color:red;'>*</span>"            },            editrules: {                required: true            }        }        , {            name: 'workUnitName',            editable: true,            hidden: true,            width: 120,            editoptions: {                size: "20",                maxlength: "23"            }        }        , {            name: 'postName',            editable: true,            hidden: true,            width: 100,            editoptions: {                size: "20",                maxlength: "20"            }        }        , {            name: 'political',            editable: true,            hidden: true,            width: 60,            edittype: "select",            renderer: function (value) {                return rsd(value, "158");            },            editoptions: {                value: odparse("158")            }        }        , {            name: 'mobile',            editable: true,            hidden: true,            width: 100,            editoptions: {                size: "20",                maxlength: "11",                oninput: "onlyInputInt(this);"            }        }        , {            name: 'idCard',            editable: true,            hidden: true,            width: 100,            editoptions: {                size: "20",                maxlength: "18",                oninput: "onlyInputInt(this);"            },        }        , {            name: 'college',            editable: true,            hidden: true,            width: 100,            editoptions: {                size: "20",                maxlength: "18",            },        }        , {            name: 'badgeNum',            editable: true,            hidden: false,            width: 75,            editoptions: {                size: "20",                maxlength: "18",            },        }        , {            name: 'birthDate',            editable: true,            hidden: true,            width: 100,            edittype: "datebox",            dataoptions: {                formatter: function (date) {                    var y = date.getFullYear();                    var m = date.getMonth() + 1;                    var d = date.getDate();                    return y + '-' + (m < 10 ? ('0' + m) : m) + '-' + (d < 10 ? ('0' + d) : d);                },                parser: function (s) {                    if (!s) return new Date();                    var ss = (s.split('-'));                    var y = parseInt(ss[0], 10);                    var m = parseInt(ss[1], 10);                    var d = parseInt(ss[2], 10);                    if (!isNaN(y) && !isNaN(m) && !isNaN(d)) {                        return new Date(y, m - 1, d);                    } else {                        return new Date();                    }                }            },            editoptions: {                style: "width: 175px; height: 30px;"            },        }        , {            name: 'clsId',            editable: true,            hidden: false,            width: 120,            renderer: function (value, cur) {                var v = $.jgrid.getAccessor(cur, 'clsName');                if (v == '' || v == null || v == undefined) {                    v = '';                }                return v;            },            editoptions: {                size: "20",                maxlength: "18",            },        }        , {            name: 'regStatus',            editable: false,            width: 35,            edittype: "checkbox",            editoptions: {                value: "1:0"            },            cellattr: function (rowId, val, rawObject, cm, rdata) {                if (rawObject.regStatus == '0') {                    return "style='color:red'";                }                if (rawObject.regStatus == '1') {                    return "style='color:black'";                }                if (rawObject.regStatus == '2') {                    return "style='color:green'";                }            },            unformat: aceSwitch,            renderer: function (value) {                return parseStatus(value);            },            formoptions: {                elmprefix: "",                elmsuffix: "<span style='color:red;'>*</span>"            }, editrules: {                required: true            }        }        , {            name: 'remark',            editable: true,            hidden: true,            width: 100,            editoptions: {                size: "20",                maxlength: "50"            },        }        , {            name: 'createDate',            hidden: true,            editable: false,            width: 100        }        , {            name: 'updateDate',            editable: false,            hidden: true,            width: 100,            edittype: "datebox",            dataoptions: {                formatter: function (date) {                    var y = date.getFullYear();                    var m = date.getMonth() + 1;                    var d = date.getDate();                    return y + '-' + (m < 10 ? ('0' + m) : m) + '-'                        + (d < 10 ? ('0' + d) : d);                },                parser: function (s) {                    if (!s)                        return new Date();                    var ss = (s.split('-'));                    var y = parseInt(ss[0], 10);                    var m = parseInt(ss[1], 10);                    var d = parseInt(ss[2], 10);                    if (!isNaN(y) && !isNaN(m) && !isNaN(d)) {                        return new Date(y, m - 1, d);                    } else {                        return new Date();                    }                }            },            editoptions: {                size: "20",                maxlength: "50"            },        }        , {            name: 'opt',            width: 80,            hidden: false,            editable: false,            sortable: false,            renderer: function (value, cur) {                return renderBtn(cur);            }        }    ];}function aceSwitch(cellvalue, options, cell) {    console.log('aceSwitch');    setTimeout(function () {        $(cell).find('input[type=checkbox]')            .addClass('ace ace-switch ace-switch-5')            .after('<span class="lbl"></span>');    }, 0);}// enable datepickerfunction pickDate(cellvalue, options, cell) {    setTimeout(function () {        $(cell).find('input[type=text]').datepicker({            format: 'yyyy-mm-dd',            autoclose: true        });    }, 0);}function renderBtn(cur) {    var rowid = $.jgrid.getAccessor(cur, 'id');    var title = $.jgrid.getAccessor(cur, 'name');    var regStatus = $.jgrid.getAccessor(cur, 'regStatus');    var opt = [];    if (authorConfig.hasOwnProperty(cfg.grid_edit_data_url)) {        opt.push('<a href="javascript:edit(\'' + rowid + '\')">编辑</a> ');    }    if (authorConfig.hasOwnProperty(cfg.grid_delete_data_url)) {        opt.push('<a href="javascript:del(\'' + rowid + '\')">删除</a>  ');    }    opt.push('<a href="#" data-toggle="modal" data-id="' + rowid + '" data-title="' + title + '" ' +        'data-target="#modal-preview">查看</a>');    return opt.join(' ');}