<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huacainfo.ace.policeschool.dao.ClassScheduleDao">
    <resultMap id="BaseResultMap" type="com.huacainfo.ace.policeschool.model.ClassSchedule">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="classesId" jdbcType="VARCHAR" property="classesId"/>
        <result column="startTime" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="endTime" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="teacherId" jdbcType="VARCHAR" property="teacherId"/>
        <result column="courseId" jdbcType="VARCHAR" property="courseId"/>
        <result column="ifTest" jdbcType="VARCHAR" property="ifTest"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, classesId, startTime, endTime, teacherId, courseId,ifTest, status, remark
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from class_schedule
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from class_schedule
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.huacainfo.ace.policeschool.model.ClassSchedule">
        insert into class_schedule (id, classesId, startTime,endTime,
         teacherId, courseId,ifTest, status, remark
        )
        values (#{id,jdbcType=VARCHAR}, #{classesId,jdbcType=VARCHAR},
        #{startTime,jdbcType=TIMESTAMP},#{endTime,jdbcType=TIMESTAMP},
        #{teacherId,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR},
        #{ifTest,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.huacainfo.ace.policeschool.model.ClassSchedule">
        update class_schedule
        set classesId = #{classesId,jdbcType=VARCHAR},
        startTime = #{startTime,jdbcType=TIMESTAMP},
        endTime = #{endTime,jdbcType=TIMESTAMP},
        teacherId = #{teacherId,jdbcType=VARCHAR},
        courseId = #{courseId,jdbcType=VARCHAR},
        courseId = #{courseId,jdbcType=VARCHAR},
        ifTest = #{ifTest,jdbcType=VARCHAR},
        remark = #{remark,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <!--#########################################3################-->

    <resultMap id="VoResultMap" extends="BaseResultMap"
               type="com.huacainfo.ace.policeschool.vo.ClassScheduleVo">
        <result column="courseName" jdbcType="VARCHAR" property="courseName"/>
        <result column="teacherName" jdbcType="VARCHAR" property="teacherName"/>
        <result column="testedNum" jdbcType="INTEGER" property="testedNum"/>
        <result column="testNum" jdbcType="INTEGER" property="testNum"/>
    </resultMap>


    <resultMap extends="BaseResultMap" id="BaseResultMapVo" type="com.huacainfo.ace.policeschool.vo.ClassScheduleVo">
        <result column="userNum" jdbcType="DECIMAL" property="userNum"/>
        <result column="studentNum" jdbcType="DECIMAL" property="studentNum"/>
        <result column="averageScore" jdbcType="DECIMAL" property="averageScore"/>
        <collection property="course" ofType="com.huacainfo.ace.policeschool.model.Course">
            <id property="id" column="cId"/>
            <result column="cName" property="name"/>
            <result column="category" property="category"/>
            <result column="cTeacherId" property="teacherId"/>
            <result column="evaluatingId" property="evaluatingId"/>
        </collection>
        <collection property="teacher" ofType="com.huacainfo.ace.policeschool.model.Teacher">
            <id property="id" column="tId"/>
            <result column="tName" property="name"/>
        </collection>
        <collection property="classes" ofType="com.huacainfo.ace.policeschool.model.Classes">
            <id property="id" column="claId"/>
            <result column="claName" property="name"/>
        </collection>
    </resultMap>


    <sql id="Vo_Column_List">
        (
        SELECT count(DISTINCT er.userId)
        FROM policeschool.evaluation_rst er
        WHERE er.classScheduleId=cs.id
        ) AS userNum,
        (
        SELECT COUNT(*)
        FROM policeschool.student st
        WHERE st.classId=cs.classesId) AS studentNum,

        (
        SELECT (SELECT SUM(er.score)
        FROM policeschool.evaluation_rst er
        WHERE er.classScheduleId=cs.id)/userNum
        ) AS averageScore,
        cs.id, cs.classesId, cs.startTime, cs.endTime, cs.teacherId, cs.courseId,
        cs.ifTest, cs.status, cs.remark,

        c.id as cId,c.name as cName,c.category ,c.teacherId as cTeacherId,c.evaluatingId,
        t.id as tId ,t.name as tName,

        cla.id as claId ,cla.name as claName
    </sql>

    <sql id="Where_Condition">
        where 1=1
        <if test="condition.cName !=null and condition.cName !=&quot;&quot;">
            and c.name LIKE concat('%',#{condition.cName,jdbcType=VARCHAR},'%')
        </if>
        <if test="condition.classesId !=null and condition.classesId !=&quot;&quot;">
            and cs.classesId = #{condition.classesId,jdbcType=VARCHAR}
        </if>
        <if test="condition.cTeacherId !=null and condition.cTeacherId !=&quot;&quot;">
            and c.teacherId = #{condition.cTeacherId,jdbcType=VARCHAR}
        </if>
        <if test="condition.weekDate !=null and condition.weekDate !=&quot;&quot;">
            AND WEEKOFYEAR(cs.startTime) =WEEKOFYEAR(#{condition.weekDate,jdbcType=VARCHAR})
            AND YEAR(cs.startTime) =YEAR(#{condition.weekDate,jdbcType=VARCHAR})
        </if>
        <if test="condition.startTimeStr !=null and condition.startTimeStr !=&quot;&quot;">
            and to_days(cs.startTime) = TO_DAYS(#{condition.startTimeStr,jdbcType=VARCHAR})
        </if>
        <if test="condition.learned !=null and condition.learned !=&quot;&quot;">
            AND cs.startTime <![CDATA[ < ]]> NOW()
        </if>
        <if test="condition.classList !=null and condition.classList.size > 0">
            and cs.classesId in
            <foreach collection="condition.classList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="condition.status !=null and condition.status !=&quot;&quot;">
            and cs.status = #{condition.status,jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="From_Statement">
        FROM class_schedule cs
        LEFT JOIN policeschool.course c ON cs.courseId =c.id
        LEFT JOIN policeschool.teacher t ON c.teacherId=t.id
        LEFT JOIN policeschool.classes cla on cla.id=cs.classesId
    </sql>

    <select id="LearnedCourses" parameterType="java.lang.String" resultMap="BaseResultMapVo">
        select
        <include refid="Vo_Column_List"/>
        <include refid="From_Statement"/>
        <include refid="Where_Condition"/>
        <choose>
            <when test="orderBy!=null and orderBy!=&quot;&quot;">
                ORDER BY ${orderBy}
            </when>
            <otherwise>
                ORDER BY cs.startTime DESC
            </otherwise>
        </choose>
        limit #{start,jdbcType=DECIMAL}, #{limit,jdbcType=DECIMAL}
    </select>


    <select id="notDoneTestList" parameterType="java.lang.String" resultMap="BaseResultMapVo">
        select
        cs.id, cs.classesId, cs.startTime, cs.endTime, cs.teacherId, cs.courseId,cs.ifTest,
        c.id as cId,c.name as cName,c.category ,c.teacherId as cTeacherId,c.evaluatingId,
        t.id as tId ,t.name as tName,
        cla.id as claId ,cla.name as claName
        <include refid="From_Statement"/>
        WHERE cs.startTime <![CDATA[ < ]]> NOW()
        AND cs.classesId = #{condition.classesId,jdbcType=VARCHAR}
        AND cs.ifTest ='1'
        And c.evaluatingId is not null
        AND cs.id NOT IN
        (
        SELECT t.classScheduleId
        FROM (SELECT classScheduleId, userId
        FROM policeschool.evaluation_rst er
        WHERE er.userId = #{condition.erUserId,jdbcType=VARCHAR}) t
        GROUP BY t.classScheduleId
        )
        <choose>
            <when test="orderBy!=null and orderBy!=&quot;&quot;">
                ORDER BY ${orderBy}
            </when>
            <otherwise>
                ORDER BY cs.startTime desc
            </otherwise>
        </choose>
        limit #{start,jdbcType=DECIMAL}, #{limit,jdbcType=DECIMAL}
    </select>


    <select id="doneTestList" parameterType="java.lang.String" resultMap="BaseResultMapVo">
        select
        <include refid="Vo_Column_List"/>
        <include refid="From_Statement"/>
        WHERE 1=1
        -- AND cs.classesId = #{condition.classesId,jdbcType=VARCHAR}
        AND cs.id IN
        (
        SELECT t.classScheduleId
        FROM (SELECT classScheduleId, userId
        FROM policeschool.evaluation_rst er
        WHERE er.userId = #{condition.erUserId,jdbcType=VARCHAR}) t
        GROUP BY t.classScheduleId
        )
        <choose>
            <when test="orderBy!=null and orderBy!=&quot;&quot;">
                ORDER BY ${orderBy}
            </when>
            <otherwise>
                ORDER BY cs.startTime desc
            </otherwise>
        </choose>
        limit #{start,jdbcType=DECIMAL}, #{limit,jdbcType=DECIMAL}
    </select>


    <select id="findCount" resultType="int">
        SELECT COUNT(*)
        <include refid="From_Statement"/>
        <include refid="Where_Condition"/>
    </select>


    <select id="notDoneTestSize" resultType="int">
        SELECT COUNT(*)
        FROM class_schedule cs
        LEFT JOIN policeschool.course c ON cs.courseId =c.id
        WHERE cs.startTime <![CDATA[ < ]]> NOW()
        AND cs.classesId = #{condition.classesId,jdbcType=VARCHAR}
        AND cs.ifTest ='1'
        AND (c.evaluatingId IS NOT NULL OR c.evaluatingId <![CDATA[ <> ]]>'')
        AND cs.id NOT IN
        (
        SELECT distinct classScheduleId
        FROM policeschool.evaluation_rst er
        WHERE er.userId = #{condition.erUserId,jdbcType=VARCHAR}
        )
    </select>


    <select id="isExit" resultType="int" parameterType="com.huacainfo.ace.policeschool.model.Student">
        select count(1)
        from class_schedule cs
        where c.status <![CDATA[ <> ]]> 0
        and c.name = #{condition.name,jdbcType=VARCHAR}
        and c.teacherId= #{condition.teacherId,jdbcType=VARCHAR}
    </select>

    <select id="selectVoByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMapVo">
        select
        <include refid="Vo_Column_List"/>
        <include refid="From_Statement"/>
        where cs.id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="findList" parameterType="java.lang.String" resultMap="VoResultMap">
        select
        c.`name` as courseName,
        t.`name` as teacherName,
        (select COUNT(DISTINCT er.userId) from evaluation_rst er where er.classScheduleId = cs.id ) AS testedNum,
        (select count(s.id) from student s where s.classId = cs.classesId) AS testNum,

        cs.id, cs.classesId, cs.startTime, cs.endTime,
        cs.teacherId, cs.courseId, cs.ifTest, cs.status, cs.remark
        from class_schedule cs
        left join course c on cs.courseId = c.id
        left join teacher t on cs.teacherId = t.id
        where 1 = 1
        <if test="condition.status !=null and condition.status !=&quot;&quot;">
            and cs.status = #{condition.status,jdbcType=VARCHAR}
        </if>
        <if test="condition.teacherId !=null and condition.teacherId !=&quot;&quot;">
            and cs.teacherId = #{condition.teacherId,jdbcType=VARCHAR}
        </if>
    </select>

    <update id="updateStatus" parameterType="com.huacainfo.ace.policeschool.model.ClassSchedule">
        update class_schedule
        set status = #{status,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="dataReport" resultType="map">
    select
        -- 本周
        (
        select count(1)
        from class_schedule t
        where t.`status` = '2'
            and t.teacherId = #{teacherId,jdbcType=VARCHAR}
            and ( t.endTime BETWEEN #{weekStart,jdbcType=VARCHAR} and #{weekEnd,jdbcType=VARCHAR} )
        ) AS weekNum,
        -- 本月
        (
        select count(1)
        from class_schedule t
        where t.`status` = '2'
            and t.teacherId = #{teacherId,jdbcType=VARCHAR}
            and t.endTime like CONCAT( #{monthStr,jdbcType=VARCHAR}, '%')
        ) AS monthNum,
        -- 本季度
        (
        select count(1)
        from class_schedule t
        where t.`status` = '2'
            and t.teacherId = #{teacherId,jdbcType=VARCHAR}
            and ( t.endTime BETWEEN #{seasonStart,jdbcType=VARCHAR} and #{seasonEnd,jdbcType=VARCHAR} )
        ) AS seasonNum,
        -- 本年度
        (
        select count(1)
        from class_schedule t
        where t.`status` = '2'
            and t.teacherId = #{teacherId,jdbcType=VARCHAR}
            and t.endTime like CONCAT( #{yearStr,jdbcType=VARCHAR}, '%')
        -- and t.
        ) AS yearNum
    from dual;
    </select>
    <select id="chartReport" resultType="java.util.Map">
        select
            (
            select count(1)
            from class_schedule t
            where t.`status` = '2'
                and t.teacherId = #{teacherId,jdbcType=VARCHAR}
                and t.endTime like CONCAT( #{yearStr,jdbcType=VARCHAR} , '-01%')
            ) AS M01,
            (
            select count(1)
            from class_schedule t
            where t.`status` = '2'
                and t.teacherId = #{teacherId,jdbcType=VARCHAR}
                and t.endTime like CONCAT( #{yearStr,jdbcType=VARCHAR} , '-02%')
            ) AS M02,
            (
            select count(1)
            from class_schedule t
            where t.`status` = '2'
                and t.teacherId = #{teacherId,jdbcType=VARCHAR}
                and t.endTime like CONCAT( #{yearStr,jdbcType=VARCHAR} , '-03%')
            ) AS M03,
            (
            select count(1)
            from class_schedule t
            where t.`status` = '2'
                and t.teacherId = #{teacherId,jdbcType=VARCHAR}
                and t.endTime like CONCAT( #{yearStr,jdbcType=VARCHAR} , '-04%')
            ) AS M04,
            (
            select count(1)
            from class_schedule t
            where t.`status` = '2'
                and t.teacherId = #{teacherId,jdbcType=VARCHAR}
                and t.endTime like CONCAT( #{yearStr,jdbcType=VARCHAR} , '-05%')
            ) AS M05,
            (
            select count(1)
            from class_schedule t
            where t.`status` = '2'
                and t.teacherId = #{teacherId,jdbcType=VARCHAR}
                and t.endTime like CONCAT( #{yearStr,jdbcType=VARCHAR} , '-06%')
            ) AS M06,
            (
            select count(1)
            from class_schedule t
            where t.`status` = '2'
                and t.teacherId = #{teacherId,jdbcType=VARCHAR}
                and t.endTime like CONCAT( #{yearStr,jdbcType=VARCHAR} , '-07%')
            ) AS M07,
            (
            select count(1)
            from class_schedule t
            where t.`status` = '2'
                and t.teacherId = #{teacherId,jdbcType=VARCHAR}
                and t.endTime like CONCAT( #{yearStr,jdbcType=VARCHAR} , '-08%')
            ) AS M08,
            (
            select count(1)
            from class_schedule t
            where t.`status` = '2'
                and t.teacherId = #{teacherId,jdbcType=VARCHAR}
                and t.endTime like CONCAT( #{yearStr,jdbcType=VARCHAR} , '-09%')
            ) AS M09,
            (
            select count(1)
            from class_schedule t
            where t.`status` = '2'
                and t.teacherId = #{teacherId,jdbcType=VARCHAR}
                and t.endTime like CONCAT( #{yearStr,jdbcType=VARCHAR} , '-10%')
            ) AS M10,
            (
            select count(1)
            from class_schedule t
            where t.`status` = '2'
                and t.teacherId = #{teacherId,jdbcType=VARCHAR}
                and t.endTime like CONCAT( #{yearStr,jdbcType=VARCHAR} , '-11%')
            ) AS M11,
            (
            select count(1)
            from class_schedule t
            where t.`status` = '2'
                and t.teacherId = #{teacherId,jdbcType=VARCHAR}
                and t.endTime like CONCAT( #{yearStr,jdbcType=VARCHAR} , '-12%')
            ) AS M12
        from dual;
    </select>


</mapper>
