<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huacainfo.ace.glink.dao.LeLampStatusDao">
    <resultMap id="BaseResultMap" type="com.huacainfo.ace.glink.model.LeLampStatus">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="checkDate" jdbcType="VARCHAR" property="checkDate"/>
        <result column="checkYear" jdbcType="VARCHAR" property="checkYear"/>
        <result column="checkMonth" jdbcType="VARCHAR" property="checkMonth"/>
        <result column="checkDay" jdbcType="VARCHAR" property="checkDay"/>
        <result column="lampCount" jdbcType="INTEGER" property="lampCount"/>
        <result column="brokenLampCount" jdbcType="INTEGER" property="brokenLampCount"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="createDate" jdbcType="TIMESTAMP" property="createDate"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, checkDate, checkYear, checkMonth, checkDay, lampCount, brokenLampCount, remark, 
    status, createDate
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from le_lamp_status
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from le_lamp_status
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.huacainfo.ace.glink.model.LeLampStatus">
    insert into le_lamp_status (id, checkDate, checkYear, 
      checkMonth, checkDay, lampCount, 
      brokenLampCount, remark, status, 
      createDate)
    values (#{id,jdbcType=VARCHAR}, #{checkDate,jdbcType=VARCHAR}, #{checkYear,jdbcType=VARCHAR}, 
      #{checkMonth,jdbcType=VARCHAR}, #{checkDay,jdbcType=VARCHAR}, #{lampCount,jdbcType=INTEGER}, 
      #{brokenLampCount,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, 
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.huacainfo.ace.glink.model.LeLampStatus">
    update le_lamp_status
    set checkDate = #{checkDate,jdbcType=VARCHAR},
      checkYear = #{checkYear,jdbcType=VARCHAR},
      checkMonth = #{checkMonth,jdbcType=VARCHAR},
      checkDay = #{checkDay,jdbcType=VARCHAR},
      lampCount = #{lampCount,jdbcType=INTEGER},
      brokenLampCount = #{brokenLampCount,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      createDate = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <delete id="deleteByCheckDate">
    delete from le_lamp_status
    where checkDate = #{checkDate,jdbcType=VARCHAR}
  </delete>


    <resultMap id="VoResultMap" extends="BaseResultMap" type="com.huacainfo.ace.glink.vo.LeLampStatusVo">

    </resultMap>

    <sql id="Vo_Column_List">
       id, checkDate, checkYear, checkMonth, checkDay, lampCount, brokenLampCount, remark,
      status, createDate
    </sql>
    <sql id="From_Statement">
        FROM le_lamp_status t
    </sql>
    <sql id="Where_Condition">
        where 1 = 1
        <if test="condition.checkDate !=null and condition.checkDate !=&quot;&quot;">
            and t.checkDate like concat(#{condition.checkDate,jdbcType=VARCHAR},'%')
        </if>
    </sql>

    <select id="selectVoByPrimaryKey" parameterType="java.lang.String" resultMap="VoResultMap">
        select
        <include refid="Vo_Column_List"/>
        <include refid="From_Statement"/>
        where t.id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="findList" parameterType="java.lang.String" resultMap="VoResultMap">
        select
        <include refid="Vo_Column_List"/>
        <include refid="From_Statement"/>
        <include refid="Where_Condition"/>
        <choose>
            <when test="orderBy!=null and orderBy!=&quot;&quot;">
                ORDER BY ${orderBy}
            </when>
            <otherwise>
                ORDER BY t.checkDate asc
            </otherwise>
        </choose>
        limit #{start,jdbcType=DECIMAL}, #{limit,jdbcType=DECIMAL}
    </select>

    <select id="findCount" resultType="int">
        SELECT COUNT(*)
        <include refid="From_Statement"/>
        <include refid="Where_Condition"/>
    </select>
</mapper>
