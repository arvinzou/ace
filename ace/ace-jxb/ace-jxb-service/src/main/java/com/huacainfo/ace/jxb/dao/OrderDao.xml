<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huacainfo.ace.jxb.dao.OrderDao">
  <resultMap id="BaseResultMap" type="com.huacainfo.ace.jxb.model.Order">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="consumerId" jdbcType="VARCHAR" property="consumerId" />
    <result column="commodityId" jdbcType="VARCHAR" property="commodityId" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="commodityName" jdbcType="VARCHAR" property="commodityName" />
    <result column="businessName" jdbcType="VARCHAR" property="businessName" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="payStatus" jdbcType="CHAR" property="payStatus" />
    <result column="payTime" jdbcType="TIMESTAMP" property="payTime" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="BaseResultMapVo" type="com.huacainfo.ace.jxb.model.Order">

  </resultMap>
  <sql id="Base_Column_List">
    id, consumerId, commodityId, category, commodityName, businessName, amount, money, 
    payStatus, payTime, createDate
  </sql>
  <sql id="whereCondition">
    from order where 0=0
    <if test='condition.id!=null and condition.id!=""'>
      and id =#{condition.id,jdbcType=VARCHAR}
    </if>
    <if test='condition.consumerId!=null and condition.consumerId!=""'>
      and consumerId =#{condition.consumerId,jdbcType=VARCHAR}
    </if>
    <if test='condition.commodityId!=null and condition.commodityId!=""'>
      and commodityId =#{condition.commodityId,jdbcType=VARCHAR}
    </if>
    <if test='condition.category!=null and condition.category!=""'>
      and category =#{condition.category,jdbcType=VARCHAR}
    </if>
    <if test='condition.commodityName!=null and condition.commodityName!=""'>
      and commodityName like
      concat('%',#{condition.commodityName,jdbcType=VARCHAR},'%')
    </if>
    <if test='condition.businessName!=null and condition.businessName!=""'>
      and businessName like
      concat('%',#{condition.businessName,jdbcType=VARCHAR},'%')
    </if>
    <if test='condition.amount!=null and condition.amount!=""'>
      and amount =#{condition.amount,jdbcType=INTEGER}
    </if>
    <if test='condition.money!=null and condition.money!=""'>
      and money =#{condition.money,jdbcType=DECIMAL}
    </if>
    <if test='condition.payStatus!=null and condition.payStatus!=""'>
      and payStatus = #{condition.payStatus,jdbcType=VARCHAR}
    </if>
    <if test='condition.payTime!=null and condition.payTime!=""'>
      and payTime = #{condition.payTime,jdbcType=TIMESTAMP}
    </if>
    <if test='condition.createDate!=null and condition.createDate!=""'>
      and createDate = #{condition.createDate,jdbcType=TIMESTAMP}
    </if>
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from order
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.huacainfo.ace.jxb.model.Order">
    insert into order (id, consumerId, commodityId, 
      category, commodityName, businessName, 
      amount, money, payStatus, 
      payTime, createDate)
    values (#{id,jdbcType=VARCHAR}, #{consumerId,jdbcType=VARCHAR}, #{commodityId,jdbcType=VARCHAR}, 
      #{category,jdbcType=VARCHAR}, #{commodityName,jdbcType=VARCHAR}, #{businessName,jdbcType=VARCHAR}, 
      #{amount,jdbcType=INTEGER}, #{money,jdbcType=DECIMAL}, #{payStatus,jdbcType=CHAR}, 
      #{payTime,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.huacainfo.ace.jxb.model.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="consumerId != null">
        consumerId,
      </if>
      <if test="commodityId != null">
        commodityId,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="commodityName != null">
        commodityName,
      </if>
      <if test="businessName != null">
        businessName,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="payStatus != null">
        payStatus,
      </if>
      <if test="payTime != null">
        payTime,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="consumerId != null">
        #{consumerId,jdbcType=VARCHAR},
      </if>
      <if test="commodityId != null">
        #{commodityId,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="commodityName != null">
        #{commodityName,jdbcType=VARCHAR},
      </if>
      <if test="businessName != null">
        #{businessName,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=CHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huacainfo.ace.jxb.model.Order">
    update order
    <set>
      <if test="consumerId != null">
        consumerId = #{consumerId,jdbcType=VARCHAR},
      </if>
      <if test="commodityId != null">
        commodityId = #{commodityId,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="commodityName != null">
        commodityName = #{commodityName,jdbcType=VARCHAR},
      </if>
      <if test="businessName != null">
        businessName = #{businessName,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="payStatus != null">
        payStatus = #{payStatus,jdbcType=CHAR},
      </if>
      <if test="payTime != null">
        payTime = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huacainfo.ace.jxb.model.Order">
    update order
    set consumerId = #{consumerId,jdbcType=VARCHAR},
      commodityId = #{commodityId,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      commodityName = #{commodityName,jdbcType=VARCHAR},
      businessName = #{businessName,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL},
      payStatus = #{payStatus,jdbcType=CHAR},
      payTime = #{payTime,jdbcType=TIMESTAMP},
      createDate = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="findList" resultMap="BaseResultMapVo">
    select
    <include refid="Base_Column_List"/>
    <include refid="whereCondition"/>
    <choose>
      <when test='orderBy!=null and orderBy!=""'>
        ORDER BY ${orderBy}
      </when>
      <otherwise>
        ORDER BY createDate desc
      </otherwise>
    </choose>
    limit #{start,jdbcType=DECIMAL}, #{limit,jdbcType=DECIMAL}
  </select>
  <select id="findCount" resultType="int">
    SELECT COUNT(*)
    <include refid="whereCondition"/>
  </select>
  <select id="isExit" resultType="int">
    select count(*)
    from order where
    id =#{condition.id,jdbcType=VARCHAR}
  </select>
</mapper>