<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huacainfo.ace.operana.dao.MeetingDao">
    <resultMap id="BaseResultMap" type="com.huacainfo.ace.operana.model.Meeting">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="discribtion" jdbcType="VARCHAR" property="discribtion"/>
        <result column="meetingDate" jdbcType="TIMESTAMP" property="meetingDate"/>
        <result column="site" jdbcType="VARCHAR" property="site"/>
        <result column="division" jdbcType="VARCHAR" property="division"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
        <result column="pcode" jdbcType="VARCHAR" property="pcode"/>
        <result column="note" jdbcType="VARCHAR" property="note"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="owner" jdbcType="VARCHAR" property="owner"/>
        <result column="category" jdbcType="VARCHAR" property="category"/>
        <result column="cvalue" jdbcType="INTEGER" property="cvalue"/>
        <result column="createUserId" jdbcType="VARCHAR" property="createUserId"/>
        <result column="createUserName" jdbcType="VARCHAR" property="createUserName"/>
        <result column="createDate" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="lastModifyUserId" jdbcType="VARCHAR" property="lastModifyUserId"/>
        <result column="lastModifyUserName" jdbcType="VARCHAR" property="lastModifyUserName"/>
        <result column="lastModifyDate" jdbcType="TIMESTAMP" property="lastModifyDate"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="BaseResultMapVo" type="com.huacainfo.ace.operana.vo.MeetingVo">

    </resultMap>
    <sql id="Base_Column_List">
        id, name, discribtion, meetingDate, site, division, comment, pcode, note, owner,
        createUserId, createUserName, createDate, lastModifyUserId, lastModifyUserName, lastModifyDate,status,category,cvalue
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMapVo">
        select
        t.id, t.name, t.discribtion, t.meetingDate, t.site, t.division, t.comment, t.pcode, t.note, t.owner,t.status,
        t.createUserId, t.createUserName, t.createDate, t.lastModifyUserId, t.lastModifyUserName, t.lastModifyDate,
        a.name ownerName,b.department_name divisionName,t.category,t.cvalue
        from meeting t
        left join portal.users a on t.owner=a.user_id
        left join portal.department b on t.division=b.department_id
        where t.id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        update meeting set status='3'
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.huacainfo.ace.operana.model.Meeting">
        insert into meeting (id, name, discribtion,
        meetingDate, site, division,
        comment, pcode, note,
        owner, createUserId, createUserName,
        createDate, lastModifyUserId, lastModifyUserName,
        lastModifyDate,status,category,cvalue)
        values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{discribtion,jdbcType=VARCHAR},
        #{meetingDate,jdbcType=TIMESTAMP}, #{site,jdbcType=VARCHAR}, #{division,jdbcType=VARCHAR},
        #{comment,jdbcType=VARCHAR}, #{pcode,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR},
        #{owner,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR},
        #{createDate,jdbcType=TIMESTAMP}, #{lastModifyUserId,jdbcType=VARCHAR}, #{lastModifyUserName,jdbcType=VARCHAR},
        #{lastModifyDate,jdbcType=TIMESTAMP},#{status,jdbcType=VARCHAR},#{category},#{cvalue})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.huacainfo.ace.operana.model.Meeting">
        update meeting
        set name = #{name,jdbcType=VARCHAR},
        discribtion = #{discribtion,jdbcType=VARCHAR},
        meetingDate = #{meetingDate,jdbcType=TIMESTAMP},
        site = #{site,jdbcType=VARCHAR},
        status = #{status,jdbcType=VARCHAR},
        division = #{division,jdbcType=VARCHAR},
        comment = #{comment,jdbcType=VARCHAR},
        pcode = #{pcode,jdbcType=VARCHAR},
        note = #{note,jdbcType=VARCHAR},
        owner = #{owner,jdbcType=VARCHAR},
        lastModifyUserId = #{lastModifyUserId,jdbcType=VARCHAR},
        lastModifyUserName = #{lastModifyUserName,jdbcType=VARCHAR},
        lastModifyDate = #{lastModifyDate,jdbcType=TIMESTAMP},
        category=#{category},
        cvalue=#{cvalue}
        where id = #{id,jdbcType=VARCHAR}
    </update>


    <sql id="whereCondition">
        from meeting t
        left join portal.users a on t.owner=a.user_id
        left join portal.department b on t.division=b.department_id
        where 0=0
        <if test='condition.name!=null and condition.name!=""'>
            and t.name like
            concat('%',#{condition.name,jdbcType=VARCHAR},'%')
        </if>
        <if test="condition.division!=null and condition.division!=&quot;&quot;">
            and t.division like concat(#{condition.division,jdbcType=VARCHAR},'%')
        </if>
        <if test="condition.owner!=null and condition.owner!=&quot;&quot;">
            and t.owner =#{condition.owner,jdbcType=VARCHAR}
        </if>
        <if test='condition.startDate!=null and condition.startDate!=""'>
            <![CDATA[
			and t.meetingDate>=str_to_date(#{condition.startDate},'%Y-%m-%d %H:%i:%S')
			]]>
        </if>
        <if test='condition.endDate!=null and condition.endDate!=""'>
            <![CDATA[
				and t.meetingDate<=str_to_date(#{condition.endDate},'%Y-%m-%d %H:%i:%S')
				]]>
        </if>
        <if test="condition.status!=null and condition.status!=&quot;&quot;">
            and t.status =#{condition.status,jdbcType=VARCHAR}
        </if>
    </sql>
    <select id="findCount" resultType="int">
        SELECT COUNT(*)
        <include refid="whereCondition"/>
    </select>
    <select id="findList" resultMap="BaseResultMapVo">
        select * from(
        select
        t.id, t.name, t.discribtion, t.meetingDate, t.site, t.division, t.comment, t.pcode, t.note, t.owner,t.status,
        t.createUserId, t.createUserName, t.createDate, t.lastModifyUserId, t.lastModifyUserName, t.lastModifyDate,
        a.name ownerName,b.department_name divisionName,t.category,t.cvalue
        <include refid="whereCondition"/>) m
        <choose>
            <when test='orderBy!=null and orderBy!=""'>
                ORDER BY m.${orderBy}
            </when>
            <otherwise>
                ORDER BY m.meetingDate desc
            </otherwise>
        </choose>

        limit #{start,jdbcType=DECIMAL}, #{limit,jdbcType=DECIMAL}

    </select>

    <select id="isExit" resultType="int">
        select count(*)
        from
        meeting where
        name=#{name}
    </select>

    <select id="selectAllTopicCategory" resultType="map">
        select code,name from portal.dict where category_id='90'
    </select>
    <select id="selectTopicByCategory" resultType="map">
        select t.id,t.name,a.id value from topic t left join (select
        id,topicId from meeting_topic where meetingId=#{meetingId})a on t.id=a.topicId where category=#{category} and
        status='1'
    </select>
    <select id="selectTopicByName" resultType="map">
        select t.id,t.name,a.id value from topic t left join (select
        id,topicId from meeting_topic where meetingId=#{meetingId})a on t.id=a.topicId where t.name like concat('%',#{name,jdbcType=VARCHAR},'%') and
        status='1'
    </select>
    <select id="selectTopicByMeetingId" resultType="map">
        SELECT
        @rownum := @rownum + 1 AS rownum,
        t.*
        FROM
        (SELECT @rownum := 0) r,
        (
        SELECT
        t.name,
        ifnull(b.name,'待设置') owner,t.id
        FROM
        topic t
        INNER JOIN meeting_topic a ON t.id = a.topicId
        left join portal.users b on a.owner=b.user_id
        WHERE
        a.meetingId = #{meetingId}
        AND t. STATUS = '1'
        ) AS t

    </select>
    <!--与会人员设置-->

    <select id="selectAllUserDeptId" resultType="map">
        select t.department_id code,t.department_name name from portal.department t where t.syid='operana'
    </select>
    <select id="selectUserByDeptId" resultType="map">
        select t.user_id id,t.name,a.id value from portal.users t left join (select
        id,userId from meeting_user where meetingId=#{meetingId})a on t.user_id=a.userId where t.department_id=#{deptId}
    </select>
    <select id="selectUserByName" resultType="map">
        select t.user_id id,t.name,a.id value from portal.users t left join (select
        id,userId from meeting_user where meetingId=#{meetingId})a on t.user_id=a.userId where t.name like concat('%',#{name,jdbcType=VARCHAR},'%')

    </select>
    <select id="selectUserByMeetingId" resultType="map">
        SELECT
        @rownum := @rownum + 1 AS rownum,
        t.*
        FROM
        (SELECT @rownum := 0) r,
        (
        SELECT
        b.name roleName,
        t.name,
        a.present,
        a.mandatory,
        t.user_id
        FROM
        portal.users t
        INNER JOIN meeting_user a ON t.user_id = a.userId
        left join (select code ,name from portal.dict where category_id='05') b on t.user_level=b.code
        WHERE
        a.meetingId = #{meetingId}
        ) AS t

    </select>
    <select id="selectTaskForEmail" resultType="map">
        <![CDATA[
       SELECT
        a.department_name 'name',
        t.opened,
        t.closed,
        t.total,
		CONCAT(TRUNCATE((t.closed/t.total),2)*100,'%') normName
        FROM
        (
        SELECT
        count(1) total,
        sum(
        CASE
        WHEN k.STATUS = '2' THEN
        1
        ELSE
        0
        END
        ) closed,
        sum(
        CASE
        WHEN k.STATUS = '1' THEN
        1
        ELSE
        0
        END
        ) opened,
        k.deptId,
		group_concat(distinct(b.name) separator ',') normName
        FROM
        tpa k left join  norm b on k.normId=b.id
        GROUP BY
        k.deptId
        ) t
        LEFT JOIN portal.department a ON t.deptId = a.department_id
        ORDER BY
        t.opened
        ]]>
        <!--
        where hour(timediff(k.lastModifyDate,now()))<=#{tasktime}
        -->
    </select>
    <select id="selectEmailForNotice" resultType="map">
        select email,name from portal.users t where t.user_level='5' and email is not null and stauts='1'
    </select>
    <select id="selectLiableEmailForNotice" resultType="map">
        select user_id userId,email,name from portal.users t where t.user_id in(select DISTINCT(liable) from tpa where status !='2') and email is not null
    </select>
</mapper>