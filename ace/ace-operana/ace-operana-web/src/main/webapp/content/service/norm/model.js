var _colNames = ['指标编码', '指标名称', '说明', '分类', '指标分组', '归属部门', '指标计算类型', '状态',		'指标文件URL', '拼音码', '创建人编号', '创建人姓名', '入库日期', '最后更新人编号', '最后更新人姓名',		'最后更新时间', '操作'];var _colModel = function() {	return [			{				name : 'id',				width : 100,				hidden : true,				editable : false			},			{				name : 'name',				width : 100,				editable : true,				editoptions : {					size : "20",					maxlength : "50"				},				formoptions : {					elmprefix : "",					elmsuffix : "<span style='color:red;font-size:16px;font-weight:800'>*</span>"				},				editrules : {					required : true				}			},			{				name : 'remark',				editable : true,				hidden : true,				width : 100,				editoptions : {					size : "20",					maxlength : "50"				}			},			{				name : 'category',				width : 100,				editable : true,				editoptions : {					size : "20",					maxlength : "50"				},				formoptions : {					elmprefix : "",					elmsuffix : "<span style='color:red;font-size:16px;font-weight:800'>*</span>"				},				editrules : {					required : true				},				edittype : "select",				renderer : function(value) {					return rsd(value, "86");				},				editoptions : {					value : odparse("86")				}			},			{				name : 'groups',				editable : false,				hidden : true,				width : 100,				edittype : "select",				renderer : function(value) {					return rsd(value, "88");				},				editoptions : {					value : odparse("88")				}			},			{				name : 'deptId',				editable : true,				hidden : true,				width : 100,				edittype : "combotree",				dataoptions : {					url : portalPath + '/system/selectDepartmentTreeList.do',					animate : true,					lines : false				},				editoptions : {					style : 'width:175px;line-height: 25px;height: 25px;'				},				formoptions : {					elmprefix : "",					elmsuffix : "<span style='color:red;font-size:16px;font-weight:800'></span>"				},				editrules : {					required : false				}			},			{				name : 'calType',				editable : true,				hidden : true,				formoptions : {					elmprefix : "",					elmsuffix : "<span style='color:red;font-size:16px;font-weight:800'>*</span>"				},				editrules : {					required : true				},				edittype : "select",				renderer : function(value) {					return rsd(value, "87");				},				editoptions : {					value : odparse("87")				}			},			{				name : 'status',				width : 100,				editable : true,				formoptions : {					elmprefix : "",					elmsuffix : "<span style='color:red;font-size:16px;font-weight:800'>*</span>"				},				editrules : {					required : true				},				edittype : "checkbox",				editoptions : {					value : "1:0"				},				unformat : aceSwitch,				renderer : function(value) {					var rst = "";					switch (value) {						case '1' :							rst = "on";							break;						case '0' :							rst = "off";							break;						default :							rst = "N/A";					}					return rst;				}			}, {				name : 'url',				editable : true,				hidden : true,				width : 100,				edittype : "textarea",				editoptions : {					colspan : true,					size : "20",					maxlength : "250",					style : 'width:82%;height: 50px;'				}			}, {				name : 'pcode',				width : 100,				hidden : true,				editable : false			}, {				name : 'createUserId',				width : 100,				hidden : true,				editable : false			}, {				name : 'createUserName',				width : 100,				hidden : true,				editable : false			}, {				name : 'createDate',				width : 100,				editable : false			}, {				name : 'lastModifyUserId',				width : 100,				hidden : true,				editable : false			}, {				name : 'lastModifyUserName',				width : 100,				hidden : true,				editable : false			}, {				name : 'lastModifyDate',				width : 100,				hidden : true,				editable : false			}, {                               name : 'opt',                               sortable : false,                               width : 50,                               renderer : function(value, cur) {                                   var rowid=$.jgrid.getAccessor(cur, cfg.dataId);                                   var opt=[];                                   if(authorConfig.hasOwnProperty(cfg.grid_edit_data_url )){                                       opt.push('<a href="javascript:edit(\''+rowid+'\')">编辑</a> ');                                   }                                   if(authorConfig.hasOwnProperty(cfg.grid_delete_data_url)){                                       opt.push('<a href="javascript:del(\''+rowid+'\')">删除</a>');                                   }                                   return opt.join('');                               }                           }	];}function aceSwitch(cellvalue, options, cell) {	console.log('aceSwitch');	setTimeout(function() {		$(cell).find('input[type=checkbox]').addClass(				'ace ace-switch ace-switch-5').after(				'<span class="lbl"></span>');	}, 0);}// enable datepickerfunction pickDate(cellvalue, options, cell) {	setTimeout(function() {		$(cell).find('input[type=text]').datepicker({			format : 'yyyy-mm-dd',			autoclose : true		});	}, 0);}function renderBtn(cur) {	var id = $.jgrid.getAccessor(cur, 'id');	var title = $.jgrid.getAccessor(cur, 'name');	var html = [];	html.push('<a target="_blank" href="');	html.push('javascript:preview(\'' + id + '\',\'' + title + '\')');	html.push('"');	html.push('><span class="badge badge-info">查看</span></a>');	return html.join(' ');}