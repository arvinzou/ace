<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huacainfo.ace.partyschool.dao.ZkAttDataDao">
    <resultMap id="BaseResultMap" type="com.huacainfo.ace.partyschool.model.ZkAttData">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="userId" jdbcType="VARCHAR" property="userId"/>
        <result column="attTime" jdbcType="TIMESTAMP" property="attTime"/>
        <result column="ssn" jdbcType="VARCHAR" property="ssn"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="createDate" jdbcType="TIMESTAMP" property="createDate"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, userId, attTime, ssn, name, status, remark, createDate
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from zk_att_data
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from zk_att_data
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.huacainfo.ace.partyschool.model.ZkAttData">
        insert into zk_att_data (id, userId, attTime,
        ssn, name, status, remark,
        createDate)
        values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{attTime,jdbcType=TIMESTAMP},
        #{ssn,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR},
        #{createDate,jdbcType=TIMESTAMP})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.huacainfo.ace.partyschool.model.ZkAttData">
        update zk_att_data
        set userId = #{userId,jdbcType=VARCHAR},
        attTime = #{attTime,jdbcType=TIMESTAMP},
        ssn = #{ssn,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        status = #{status,jdbcType=CHAR},
        remark = #{remark,jdbcType=VARCHAR},
        createDate = #{createDate,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="findList" parameterType="com.huacainfo.ace.partyschool.model.ZkAttData" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from zk_att_data
        where 1=1
    </select>

    <delete id="clearUp" parameterType="java.lang.String">
        delete from zk_att_data
        where 1=1
    </delete>

    <resultMap id="VoResultMap" extends="BaseResultMap" type="com.huacainfo.ace.partyschool.vo.ZkAttDataVo">

    </resultMap>

    <sql id="Vo_Column_List">
        t.id, c.userId, t.attTime, t.ssn, t.name, t.status, t.remark, t.createDate
    </sql>
    <sql id="From_Statement">
        FROM zk_att_data t
        left join card_data c on t.ssn = c.cardData
    </sql>
    <sql id="Where_Condition">
        where 1 = 1
        <if test="condition.dateTimeStr !=null and condition.dateTimeStr !=&quot;&quot;">
            and t.attTime like concat(#{condition.dateTimeStr,jdbcType=VARCHAR},'%')
        </if>
        <if test="condition.userId !=null and condition.userId !=&quot;&quot;">
            and c.userId = #{condition.userId,jdbcType=VARCHAR}
        </if>
    </sql>

    <select id="findVoList" parameterType="java.lang.String" resultMap="VoResultMap">
        select
        <include refid="Vo_Column_List"/>
        <include refid="From_Statement"/>
        <include refid="Where_Condition"/>
        <choose>
            <when test="orderBy!=null and orderBy!=&quot;&quot;">
                ORDER BY ${orderBy}
            </when>
            <otherwise>
                ORDER BY t.createDate desc
            </otherwise>
        </choose>
        limit #{start,jdbcType=DECIMAL}, #{limit,jdbcType=DECIMAL}
    </select>

    <select id="findCount" resultType="int">
        SELECT COUNT(*)
        <include refid="From_Statement"/>
        <include refid="Where_Condition"/>
    </select>

    <select id="selectVoByPrimaryKey" parameterType="java.lang.String" resultMap="VoResultMap">
        select
        <include refid="Vo_Column_List"/>
        <include refid="From_Statement"/>
        where t.id = #{id,jdbcType=VARCHAR}
    </select>
</mapper>