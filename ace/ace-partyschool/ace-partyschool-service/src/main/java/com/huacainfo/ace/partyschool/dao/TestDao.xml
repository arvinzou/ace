<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huacainfo.ace.partyschool.dao.TestDao">
    <resultMap id="BaseResultMap" type="com.huacainfo.ace.partyschool.model.Test">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="introduce" jdbcType="VARCHAR" property="introduce"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="startTime" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="endTime" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="createUserId" jdbcType="VARCHAR" property="createUserId"/>
        <result column="createUserName" jdbcType="VARCHAR" property="createUserName"/>
        <result column="createDate" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="lastModifyUserId" jdbcType="VARCHAR" property="lastModifyUserId"/>
        <result column="lastModifyUserName" jdbcType="VARCHAR" property="lastModifyUserName"/>
        <result column="lastModifyDate" jdbcType="TIMESTAMP" property="lastModifyDate"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, introduce, status, startTime, endTime, createUserId, createUserName, createDate, 
    lastModifyUserId, lastModifyUserName, lastModifyDate
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from test
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from test
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.huacainfo.ace.partyschool.model.Test">
    insert into test (id, name, introduce, 
      status, startTime, endTime, 
      createUserId, createUserName, createDate, 
      lastModifyUserId, lastModifyUserName, lastModifyDate
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{lastModifyUserId,jdbcType=VARCHAR}, #{lastModifyUserName,jdbcType=VARCHAR}, #{lastModifyDate,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.huacainfo.ace.partyschool.model.Test">
        insert into test
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="introduce != null">
                introduce,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="startTime != null">
                startTime,
            </if>
            <if test="endTime != null">
                endTime,
            </if>
            <if test="createUserId != null">
                createUserId,
            </if>
            <if test="createUserName != null">
                createUserName,
            </if>
            <if test="createDate != null">
                createDate,
            </if>
            <if test="lastModifyUserId != null">
                lastModifyUserId,
            </if>
            <if test="lastModifyUserName != null">
                lastModifyUserName,
            </if>
            <if test="lastModifyDate != null">
                lastModifyDate,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="introduce != null">
                #{introduce,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=CHAR},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="createUserName != null">
                #{createUserName,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastModifyUserId != null">
                #{lastModifyUserId,jdbcType=VARCHAR},
            </if>
            <if test="lastModifyUserName != null">
                #{lastModifyUserName,jdbcType=VARCHAR},
            </if>
            <if test="lastModifyDate != null">
                #{lastModifyDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.huacainfo.ace.partyschool.model.Test">
        update test
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="introduce != null">
                introduce = #{introduce,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=CHAR},
            </if>
            <if test="startTime != null">
                startTime = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                endTime = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                createUserId = #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="createUserName != null">
                createUserName = #{createUserName,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                createDate = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastModifyUserId != null">
                lastModifyUserId = #{lastModifyUserId,jdbcType=VARCHAR},
            </if>
            <if test="lastModifyUserName != null">
                lastModifyUserName = #{lastModifyUserName,jdbcType=VARCHAR},
            </if>
            <if test="lastModifyDate != null">
                lastModifyDate = #{lastModifyDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.huacainfo.ace.partyschool.model.Test">
    update test
    set name = #{name,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      startTime = #{startTime,jdbcType=TIMESTAMP},
      endTime = #{endTime,jdbcType=TIMESTAMP},
      lastModifyUserId = #{lastModifyUserId,jdbcType=VARCHAR},
      lastModifyUserName = #{lastModifyUserName,jdbcType=VARCHAR},
      lastModifyDate = #{lastModifyDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>


    <!--#################################################################################################################################################-->
    <resultMap id="VoResultMap" extends="BaseResultMap" type="com.huacainfo.ace.partyschool.vo.TestVo"></resultMap>

    <sql id="Vo_Column_List">
    t.id, t.name, t.introduce, t.status, t.startTime, t.endTime, t.createUserId, t.createUserName, t.createDate,
    t.lastModifyUserId, t.lastModifyUserName, t.lastModifyDate
  </sql>

    <sql id="Where_Condition">
        where t.status <![CDATA[ <> ]]> 0
        <if test="condition.name !=null and condition.name !=&quot;&quot;">
            and t.name LIKE concat('%',#{condition.name,jdbcType=VARCHAR},'%')
        </if>
        <if test="condition.status !=null and condition.status !=&quot;&quot;">
            and t.status=#{condition.status,jdbcType=CHAR}
        </if>
    </sql>

    <sql id="From_Statement">
    FROM test t
  </sql>

    <select id="findList" parameterType="java.lang.String" resultMap="VoResultMap">
        select
        <include refid="Vo_Column_List"/>
        <include refid="From_Statement"/>
        <include refid="Where_Condition"/>
        <choose>
            <when test="orderBy!=null and orderBy!=&quot;&quot;">
                ORDER BY ${orderBy}
            </when>
            <otherwise>
                ORDER BY t.createDate desc
            </otherwise>
        </choose>
        limit #{start,jdbcType=DECIMAL}, #{limit,jdbcType=DECIMAL}
    </select>

    <select id="findCount" resultType="int">
        SELECT COUNT(*)
        <include refid="From_Statement"/>
        <include refid="Where_Condition"/>
    </select>

    <select id="selectVoByPrimaryKey" parameterType="java.lang.String" resultMap="VoResultMap">
        select
        <include refid="Vo_Column_List"/>
        <include refid="From_Statement"/>
        where t.id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="isExit" resultType="int" parameterType="com.huacainfo.ace.partyschool.model.Test">
    select count(*)
    from test
    where name=#{name}
  </select>

    <update id="updateStatus" parameterType="com.huacainfo.ace.partyschool.model.Test">
        update test
        SET
        status = #{status,jdbcType=CHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>


    <resultMap extends="BaseResultMap" id="ResultMapTestTopic" type="com.huacainfo.ace.partyschool.vo.TestVo">
        <collection property="topics" ofType="com.huacainfo.ace.partyschool.vo.TopicVo">
            <result column="toId" property="id"/>
            <result column="toContent" property="content"/>
            <result column="toType" property="type"/>
            <result column="ttId" property="tid"/>
            <result column="ttIndex" property="tindex"/>
            <result column="ttScore" property="tscore"/>
        </collection>
    </resultMap>


    <select id="findTopicsByTestId" parameterType="java.lang.String" resultMap="ResultMapTestTopic">
        SELECT
        t.id, t.name, t.introduce,
        tt.id as ttId, tt.`index` as ttIndex,tt.score as ttScore,
        top.id as toId,top.content as toContent,top.`type` as toType
        FROM partyschool.test t
        LEFT JOIN partyschool.test_topic tt ON tt.testId=t.id
        LEFT JOIN partyschool.topic top ON top.id=tt.topicId
        WHERE t.id=#{id,jdbcType=VARCHAR}
        ORDER BY tt.`index` asc
    </select>



</mapper>