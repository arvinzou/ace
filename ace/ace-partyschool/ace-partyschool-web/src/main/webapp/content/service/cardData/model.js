var _colNames = ['主键',    '卡号', '用户名称', '手机号码', '身份证号码', '注册类型',    '状态 ', '创建日期', '操作'];var _colModel = function () {    return [        {            name: 'id',            editable: false,            hidden: true,            width: 100,            editoptions: {                size: "20",                maxlength: "50"            },            formoptions: {                elmprefix: "",                elmsuffix: "<span style='color:red;'>*</span>"            },            editrules: {                required: true            }        }        , {            name: 'cardData',            editable: true,            width: 100,            editoptions: {                size: "20",                maxlength: "50"            },            formoptions: {                elmprefix: "",                elmsuffix: "<span style='color:red;'>*</span>"            },            editrules: {                required: true            }        }        , {            name: 'userId',            editable: true,            width: 100,            renderer: function (value, cur) {                var v = $.jgrid.getAccessor(cur, 'name');                if (v == '' || v == null || v == undefined) {                    v = '';                }                return v;            },            edittype: "combogrid",            dataoptions: {                panelWidth: 410,                idField: 'id',                textField: 'name',                url: contextPath + '/cardData/findUserList',                mode: 'remote',                fitColumns: true,                method: 'get',                pageSize: 100,                columns: [[                    {field: 'regType', title: "注册类型", width: 90},                    {field: 'name', title: "姓名", width: 90},                    {field: 'mobile', title: "手机号码", width: 90},                    {field: 'idCard', title: "身份证", width: 130},                ]]            },            editoptions: {                style: "width:410px",            },            formoptions: {                elmprefix: "",                elmsuffix: "<span style='color:red;'>*</span>"            },            editrules: {                required: true            }        }        , {            name: 'mobile',            editable: false,            width: 100,        }        , {            name: 'idCard',            editable: false,            width: 100,        }        , {            name: 'regType',            editable: false,            width: 100,            renderer: function (value, cur) {                return parseRegType(value);            }        }        , {            name: 'status',            editable: true,            editable: false,            hidden: true,            width: 100,            edittype: "checkbox",            editoptions: {                value: "1:0"            },            cellattr: function (rowId, val, rawObject, cm, rdata) {                if (rawObject.status == '0') {                    return "style='color:red;'";                }                if (rawObject.status == '1') {                    return "style='color:#FF9224;'";                }            },            unformat: aceSwitch,            renderer: function (value) {                var rst = "";                switch (value) {                    case '1' :                        rst = "ON";                        break;                    case '0' :                        rst = "OFF";                        break;                    default :                        rst = "N/A";                }                return rst;            },            formoptions: {                elmprefix: "",                elmsuffix: "<span style='color:red;'>*</span>"            },            editrules: {                required: true            }        }        , {            name: 'createDate',            hidden: true,            editable: false,            width: 100        }        , {            name: 'opt',            width: 65,            hidden: false,            editable: false,            sortable: false,            renderer: function (value, cur) {                return renderBtn(cur);            }        }    ];}function aceSwitch(cellvalue, options, cell) {    console.log('aceSwitch');    setTimeout(function () {        $(cell).find('input[type=checkbox]')            .addClass('ace ace-switch ace-switch-5')            .after('<span class="lbl"></span>');    }, 0);}// enable datepickerfunction pickDate(cellvalue, options, cell) {    setTimeout(function () {        $(cell).find('input[type=text]').datepicker({            format: 'yyyy-mm-dd',            autoclose: true        });    }, 0);}function renderBtn(cur) {    var rowid = $.jgrid.getAccessor(cur, 'id');    var title = $.jgrid.getAccessor(cur, 'name');    var opt = [];    // if (authorConfig.hasOwnProperty(cfg.grid_edit_data_url)) {    opt.push('<a href="javascript:edit(\'' + rowid + '\')">编辑</a> ');    // }    // if (authorConfig.hasOwnProperty(cfg.grid_delete_data_url)) {    opt.push('<a href="javascript:del(\'' + rowid + '\')">删除</a>  ');    // }    opt.push('<a href="#" data-toggle="modal" ' +        'data-id="' + rowid + '" data-title="' + title + '" ' + 'data-target="#modal-preview">查看</a>');    return opt.join(' ');}